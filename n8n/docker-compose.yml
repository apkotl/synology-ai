services:
  db:
    image: postgres:17
    container_name: n8n_db
    hostname: n8n-db
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "n8n", "-U", "n8nuser"]
      timeout: 45s
      interval: 10s
      retries: 10
    ports:
      - ${DB_PORT_EXT}:${DB_PORT}
    volumes:
      - ${VOLUME_DB}:/var/lib/postgresql/data:rw
    environment:
      TZ: Europe/Kyiv
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: on-failure:5

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    healthcheck:
      test: ["CMD-SHELL", "nc -z 127.0.0.1 ${N8N_PORT} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    hostname: n8n
    user: 0:0
    security_opt:
      - no-new-privileges:true
    ports:
      - ${N8N_PORT}:${N8N_PORT}
    volumes:
      - ${VOLUME_N8N_DATA}:/root/.n8n:rw
      - ${VOLUME_N8N_FILES}:/files:rw
    environment:
      N8N_HOST: ${N8N_HOST}
      WEBHOOK_URL: ${N8N_PROTOCOL}://${N8N_HOST}
      N8N_EDITOR_BASE_URL: ${N8N_PROTOCOL}://${N8N_HOST}
      GENERIC_TIMEZONE: Europe/Kyiv
      TZ: Europe/Kyiv
      N8N_PORT: ${N8N_PORT}
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      N8N_PROTOCOL: ${N8N_PROTOCOL}
      NODE_ENV: production
      N8N_RUNNERS_ENABLED: 1
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: 1
      N8N_SECURE_COOKIE: 0 #or false if you want to use n8n without synology.me DDNS
      DB_TYPE: postgresdb
      DB_POSTGRESDB_DATABASE: ${DB_NAME}
      DB_POSTGRESDB_HOST: n8n-db
      DB_POSTGRESDB_PORT: ${DB_PORT}
      DB_POSTGRESDB_USER: ${DB_USER}
      DB_POSTGRESDB_PASSWORD: ${DB_PASSWORD}
    restart: on-failure:5
    depends_on:
      db:
        condition: service_healthy